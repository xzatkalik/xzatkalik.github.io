/*
 * FuckAdBlock 3.2.1
 * Copyright (c) 2015 Valentin Allaire <valentin.allaire@sitexw.fr>
 * Released under the MIT license
 * https://github.com/sitexw/FuckAdBlock
 */
!function(window){var FuckAdBlock=function(options){this._options={checkOnLoad:!1,resetOnEnd:!1,loopCheckTime:50,loopMaxNumber:5,baitClass:"pub_300x250 pub_300x250m pub_728x90 text-ad textAd text_ad text_ads text-ads text-ad-links",baitStyle:"width: 1px !important; height: 1px !important; position: absolute !important; left: -10000px !important; top: -1000px !important;",debug:!1},this._var={version:"3.2.1",bait:null,checking:!1,loop:null,loopNumber:0,event:{detected:[],notDetected:[]}},void 0!==options&&this.setOption(options);var self=this,eventCallback=function(){setTimeout(function(){!0===self._options.checkOnLoad&&(!0===self._options.debug&&self._log("onload->eventCallback","A check loading is launched"),null===self._var.bait&&self._creatBait(),setTimeout(function(){self.check()},1))},1)};void 0!==window.addEventListener?window.addEventListener("load",eventCallback,!1):window.attachEvent("onload",eventCallback)};FuckAdBlock.prototype._options=null,FuckAdBlock.prototype._var=null,FuckAdBlock.prototype._bait=null,FuckAdBlock.prototype._log=function(method,message){console.log("[FuckAdBlock]["+method+"] "+message)},FuckAdBlock.prototype.setOption=function(options,value){if(void 0!==value){var key=options;(options={})[key]=value}for(var option in options)this._options[option]=options[option],!0===this._options.debug&&this._log("setOption",'The option "'+option+'" he was assigned to "'+options[option]+'"');return this},FuckAdBlock.prototype._creatBait=function(){var bait=document.createElement("div");bait.setAttribute("class",this._options.baitClass),bait.setAttribute("style",this._options.baitStyle),this._var.bait=window.document.body.appendChild(bait),this._var.bait.offsetParent,this._var.bait.offsetHeight,this._var.bait.offsetLeft,this._var.bait.offsetTop,this._var.bait.offsetWidth,this._var.bait.clientHeight,this._var.bait.clientWidth,!0===this._options.debug&&this._log("_creatBait","Bait has been created")},FuckAdBlock.prototype._destroyBait=function(){window.document.body.removeChild(this._var.bait),!(this._var.bait=null)===this._options.debug&&this._log("_destroyBait","Bait has been removed")},FuckAdBlock.prototype.check=function(loop){if(void 0===loop&&(loop=!0),!0===this._options.debug&&this._log("check","An audit was requested "+(!0===loop?"with a":"without")+" loop"),!0===this._var.checking)return!0===this._options.debug&&this._log("check","A check was canceled because there is already an ongoing"),!1;this._var.checking=!0,null===this._var.bait&&this._creatBait();var self=this;return!(this._var.loopNumber=0)===loop&&(this._var.loop=setInterval(function(){self._checkBait(loop)},this._options.loopCheckTime)),setTimeout(function(){self._checkBait(loop)},1),!0===this._options.debug&&this._log("check","A check is in progress ..."),!0},FuckAdBlock.prototype._checkBait=function(loop){var detected=!1;if(null===this._var.bait&&this._creatBait(),null===window.document.body.getAttribute("abp")&&null!==this._var.bait.offsetParent&&0!=this._var.bait.offsetHeight&&0!=this._var.bait.offsetLeft&&0!=this._var.bait.offsetTop&&0!=this._var.bait.offsetWidth&&0!=this._var.bait.clientHeight&&0!=this._var.bait.clientWidth||(detected=!0),void 0!==window.getComputedStyle){var baitTemp=window.getComputedStyle(this._var.bait,null);!baitTemp||"none"!=baitTemp.getPropertyValue("display")&&"hidden"!=baitTemp.getPropertyValue("visibility")||(detected=!0)}!0===this._options.debug&&this._log("_checkBait","A check ("+(this._var.loopNumber+1)+"/"+this._options.loopMaxNumber+" ~"+(1+this._var.loopNumber*this._options.loopCheckTime)+"ms) was conducted and detection is "+(!0===detected?"positive":"negative")),!0===loop&&(this._var.loopNumber++,this._var.loopNumber>=this._options.loopMaxNumber&&this._stopLoop()),!0===detected?(this._stopLoop(),this._destroyBait(),this.emitEvent(!0),!0===loop&&(this._var.checking=!1)):null!==this._var.loop&&!1!==loop||(this._destroyBait(),this.emitEvent(!1),!0===loop&&(this._var.checking=!1))},FuckAdBlock.prototype._stopLoop=function(detected){clearInterval(this._var.loop),this._var.loop=null,!(this._var.loopNumber=0)===this._options.debug&&this._log("_stopLoop","A loop has been stopped")},FuckAdBlock.prototype.emitEvent=function(detected){!0===this._options.debug&&this._log("emitEvent","An event with a "+(!0===detected?"positive":"negative")+" detection was called");var fns=this._var.event[!0===detected?"detected":"notDetected"];for(var i in fns)!0===this._options.debug&&this._log("emitEvent","Call function "+(parseInt(i)+1)+"/"+fns.length),fns.hasOwnProperty(i)&&fns[i]();return!0===this._options.resetOnEnd&&this.clearEvent(),this},FuckAdBlock.prototype.clearEvent=function(){this._var.event.detected=[],this._var.event.notDetected=[],!0===this._options.debug&&this._log("clearEvent","The event list has been cleared")},FuckAdBlock.prototype.on=function(detected,fn){return this._var.event[!0===detected?"detected":"notDetected"].push(fn),!0===this._options.debug&&this._log("on",'A type of event "'+(!0===detected?"detected":"notDetected")+'" was added'),this},FuckAdBlock.prototype.onDetected=function(fn){return this.on(!0,fn)},FuckAdBlock.prototype.onNotDetected=function(fn){return this.on(!1,fn)},window.FuckAdBlock=FuckAdBlock,void 0===window.fuckAdBlock&&(window.fuckAdBlock=new FuckAdBlock({checkOnLoad:!0,resetOnEnd:!0}))}(window);