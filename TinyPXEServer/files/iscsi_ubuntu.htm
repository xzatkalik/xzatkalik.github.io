<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"><html><head><link type="text/css" rel="stylesheet" href="style1.css" media="screen" /><title>Tiny PXE Server</title></head><body><font> 
 
 
 
<p> 
<select ONCHANGE="location = this.options[this.selectedIndex].value;"> 
<option value="" disabled></option> 
<option value="../index.html">Contents</option> 
<option value="" disabled>=======</option> 
<option value="pxesrv_about.htm">Introduction</option> 
<option value="pxesrv_settings.htm">Settings</option> 
<option value="pxesrv_gui.htm">GUI Settings</option> 
<option value="pxesrv_config.htm">Config.ini settings</option> 
<option value="pxesrv_service.htm">Run as Service</option> 
<option value="firewall.htm">Firewall Settings</option> 
<option value="test_system.htm">Test System(s)</option> 
<option value="misc.htm">Miscellaneous</option> 
<option value="troubleshooting.htm">Troubleshooting</option> 
<option value="" disabled></option> 
<option value="" disabled>Boot Loaders</option> 
<option value="" disabled>==========</option> 
<option value="pxelinux.htm">PXELINUX</option> 
<option value="grub4dos.htm">Grub4Dos</option> 
<option value="ipxe.htm">iPXE</option> 
<option value="" disabled></option> 
<option value="" disabled>Boot</option> 
<option value="" disabled>====</option> 
<option value="fdd.htm">Floppy Disk Image</option> 
<option value="iso.htm">ISO Image</option> 
<option value="" disabled></option> 
<option value="" disabled>Linux</option> 
<option value="" disabled>=====</option> 
<option value="centos_netinstall.htm">CentOS - Network...</option> 
<option value="debian_netinstall.htm">Debian - Network...</option> 
<option value="fatdog.htm">FatDog</option> 
<option value="gparted.htm">GPartEd</option> 
<option value="ubuntu.htm">ubuntu/Lubuntu</option> 
<option value="ubuntu_netinstall.htm">ubuntu - Network...</option> 
<option value="" disabled></option> 
<option value="" disabled>WinPE</option> 
<option value="" disabled>=====</option> 
<option value="winpe.htm">WinPE</option> 
<option value="winpe_wimboot.htm">WinPE (wimboot)</option> 
<option value="winpe_bcd.htm">Multiple WinPE</option> 
<option value="" disabled></option> 
<option value="" disabled>Net Install Windows</option> 
<option value="" disabled>===============</option> 
<option value="ris.htm">RIS</option> 
<option value="ris_issues.htm">Troubleshooting RIS</option> 
<option value="win6x.htm">Install Windows NT 6.*</option> 
<option value="win5x.htm">Install Windows NT 5.*</option> 
<option value="" disabled></option> 
<option value="" disabled>SANBOOT (AoE)</option> 
<option value="" disabled>================</option> 
<option value="aoe_target.htm">AoE (Windows T...</option> 
<option value="aoe_install_winnt5.htm">AoE (Install Driver...</option> 
<option value="aoe_install_winnt6.htm">AoE (Install Driver...</option> 
<option value="aoe.htm">AoE (Clone...</option> 
<option value="" disabled></option> 
<option value="" disabled>SANBOOT (iSCSI)</option> 
<option value="" disabled>================</option> 
<option value="iscsi_targets.htm">iSCSI (Windows T...</option> 
<option value="iscsi_kernsafe.htm">iSCSI (Kernsafe...</option> 
<option value="iscsi_ms.htm">iSCSI (Microsoft...</option> 
<option value="iscsi_pytarget.htm">iSCSI (pyTarget)</option> 
<option value="iscsi.htm">iSCSI (Clone...</option> 
<option value="iscsi_install.htm">iSCSI (Install...</option> 
<option value="iscsi_centos.htm">iSCSI ...CentOS</option> 
<option value="iscsi_ubuntu.htm" selected="selected">iSCSI ...ubuntu</option> 
<option value="iscsi_ubuntu_netinstall.htm">iSCSI ...ubuntu (2)</option> 
<option value="" disabled></option> 
<option value="" disabled>Miscellaneous</option> 
<option value="" disabled>===========</option> 
<option value="clone.htm">Capture Windows...</option> 
<option value="clone_strarc.htm">Copy Windows...</option> 
<option value="service.htm">Network Adapter C...</option> 
<option value="wfplwf.htm">Unbinding The Light...</option> 
<option value="forensics.htm">Digital Forensic Acq...</option> 
<option value="ipxe_build.htm">iPXE - How to...</option> 
<option value="" disabled></option> 
<option value="" disabled>Appendices</option> 
<option value="" disabled>=========</option> 
<option value="pxesrv_zip.htm">Contents of pxesrv.zip</option> 
<option value="pxesrv_faq.htm">Erwan's FAQ</option> 
<option value="ack.htm">Acknowledgements...</option> 
<option value="" disabled></option> 
</select> 
</p> 
 
 
 
<hr> 
<img src="img/logo6.jpg" BORDER=1></a> 
 

<h2 align="center"><u>iSCSI (Install ubuntu to Target)</u></h2>



<p>
The instructions in this page have been tested using 32-bit lubuntu and 64-bit ubuntu (version 16.04 (Xenial Xerus)) - it may also be possible to install other versions and derivatives of ubuntu to an iSCSI <font class="file">Target</font> using these instructions. Please note that the information in this page has been adapted from the following sources -
<ul>
<li>Etherboot's "<a class="glossary" target="_blank" href="http://etherboot.org/wiki/sanboot/ubuntu_iscsi">Ubuntu 9.04 (Jaunty Jackalope) and 9.10 (Karmic Koala)</a>" page.</li>
<li>IT-Joe's "<a class="glossary" target="_blank" href="http://it-joe.com/linux/iscsi_pxe_boot">Installing an OS on iSCSI target disk</a>" page (cached <a class="glossary" target="_blank" href="http://webcache.googleusercontent.com/search?q=cache:mB61cMkQ_8cJ:it-joe.com/linux/iscsi_pxe_boot+&cd=1&hl=en&ct=clnk&gl=uk">here</a>).</li>
</ul>
</p>


<p>
Page contents -
<ul>
<li><a class="glossary" href="iscsi_ubuntu.htm#requirements">Requirements</a></li>
<li><a class="glossary" href="iscsi_ubuntu.htm#setup">System Setup</a></li>
<li><a class="glossary" href="iscsi_ubuntu.htm#stage1">Stage 1</a> (attach Target)</li>
<li><a class="glossary" href="iscsi_ubuntu.htm#stage2">Stage 2</a> (install OS)</li>
<li><a class="glossary" href="iscsi_ubuntu.htm#stage3">Stage 3</a> (prepare offline OS)</li>
<li><a class="glossary" href="iscsi_ubuntu.htm#stage4">Stage 4</a> (edit grub.cfg)</li>
<li><a class="glossary" href="iscsi_ubuntu.htm#stage5">Stage 5</a> (edit interfaces)</li>
<li><a class="glossary" href="iscsi_ubuntu.htm#stage6">Stage 6</a> (copy kernel and initrd)</li>
<li><a class="glossary" href="iscsi_ubuntu.htm#boot">Boot</a></li>
<li><a class="glossary" href="iscsi_ubuntu.htm#grub4dos1">grub4dos settings</a></li>
<li><a class="glossary" href="iscsi_ubuntu.htm#grub4dos2">grub4dos settings (Chainload iPXE)</a></li>
<li><a class="glossary" href="iscsi_ubuntu.htm#pxelinux1">pxelinux settings</a></li>
<li><a class="glossary" href="iscsi_ubuntu.htm#pxelinux2">pxelinux settings (Chainload iPXE)</a></li>
<li><a class="glossary" href="iscsi_ubuntu.htm#ipxe">iPXE Settings</a></li>
<li><a class="glossary" href="iscsi_ubuntu.htm#ipxe_scripts">iPXE Scripts</a></li>
<li><a class="glossary" href="iscsi_ubuntu.htm#iscsiuri">iSCSI URI Syntax</a></li>
</ul>
</p>


<a name="requirements"></a>
<h3 class="breaktop"><u>Requirements</u></h3>


<p>
A live internet connection is required for this method - offline installations are not covered. Additional requirements include -
<ul>
<li><font class="file">ubuntu/Lubuntu</font> (16.04) set up following the instructions <a class="glossary" href="ubuntu.htm">here</a> (booting from a NFS share).</font></li>
<li><font class="file">iSCSI Target</font> (covered elsewhere in this guide).</li>
</ul>
</p>

<p>
<b><u><font color="red">NOTE</font></u></b> - Live USB media can be used as an alternative to setting up <font class="file">ubuntu/Lubuntu</font> for PXE boot via a NFS share - if using Live USB media then a persistent install is recommended. 
</p>




<a name="setup"></a>
<h3 class="breaktop"><u>System Setup</u></h3>


<p>
The following hardware and settings were used on the test system -
<ul>
<li><b>iSCSI Target</b> - <font class="file">Kernsafe iStorage Server</font> (see <a class="glossary" href="iscsi_kernsafe.htm">here</a>).</li>
<li><b>iqn.target</b> - iSCSI Qualified Name (IQN) of the iSCSI <font class="file">Target</font>.</li>
<li><b>iqn.client</b> - iSCSI Qualified Name (IQN) of the iSCSI <font class="file">Initiator</font> (the client system).</li>
<li><b>Client System</b> - Lenovo Thinkpad X61.</li>
<li><b>192.168.1.1</b> - IP address of the <font class="file">Tiny PXE Server</font> system.</li>
<li><b>192.168.1.1</b> - IP address of the iSCSI <font class="file">Target</font>.</li>
<li><b>192.168.1.254</b> - IP address of the DHCP server, DNS server and Gateway.</li>
</ul>
</p>



<a name="stage1"></a>
<h3 class="breaktop"><u>Stage 1</u></h3>


<p>
<b><u><font color="red">NOTE</font></u></b> - the screenshots below are from <font class="file">ubuntu</font>, the instructions cover both <font class="file">ubuntu</font> and <font class="file">lubuntu</font>. 
</p>



<p class="break3em">
Start the <font class="file">Client</font> System and boot <font class="file">ubuntu</font> from the network share (or Live Media). 
</p>


<p class="break3em">
Start a terminal and enter the commands listed below (amending as required to reflect your own setup). On <font class="file">ubuntu</font>, a terminal can be started by right-clicking on the desktop and selecting <font class="file">Open Terminal</font>. On <font class="file">lubuntu</font>, click on the menu button (bottom left) &gt; <font class="file">System Tools</font> &gt; <font class="file">LXTerminal</font>.
</p>



<p class="break3em">
Log in with elevated privileges -
<br />
<textarea style="font-size:12px" cols="80" rows="3" align="left" readonly>
sudo -s
</textarea>
</p>


<p class="break3em">
Download the package lists from the repositories to get information about any new versions and dependencies (recommended before installing any new software/packages) -
<br />
<textarea style="font-size:12px" cols="80" rows="3" align="left" readonly>
apt-get update
</textarea>
</p>


<p class="break3em">
Install the <font class="file">open-iscsi</font> software package (required to connect to the iSCSI <font class="file">Target</font> before running the installer) - 
<br />
<textarea style="font-size:12px" cols="80" rows="3" align="left" readonly>
apt-get install open-iscsi
</textarea>
</p>


<div class="break3em">
Query available iSCSI <font class="file">Target</font>s on the device with IP address <b>192.168.1.1</b> (the device hosting the iSCSI <font class="file">Target</font> software) -
<br />
<textarea style="font-size:12px" cols="80" rows="3" align="left" readonly>
iscsiadm -m discovery -t st -p 192.168.1.1
</textarea>
<br />
output from running the above command (note that one target (<font class="file">iqn.target</font>)) is listed -
<br />
<a href="img/ubuntuiscsi1.png"><IMG SRC="img/ubuntuiscsi1.png" float=left width=85% margin-right=1% margin-bottom=0.5em border=1></a>
</div>



<div class="break3em">
Connect/attach the iSCSI <font class="file">Target</font> with iSCSI Qualified Name (IQN) <b>iqn.target</b> -
<br />
<textarea style="font-size:12px" cols="80" rows="3" align="left" readonly>
iscsiadm -m node -T iqn.target -P 192.168.1.1 -l
</textarea>
<br />
output from running the above command -
<br />
<a href="img/ubuntuiscsi2.png"><IMG SRC="img/ubuntuiscsi2.png" float=left width=85% margin-right=1% margin-bottom=0.5em border=1></a>
</div>



<div class="break3em">
List the partition table(s) of devices on the system (use this to confirm the device name for the iSCSI <font class="file">Target</font> mounted in the preceding step). 
<br />
<textarea style="font-size:12px" cols="80" rows="3" align="left" readonly>
fdisk -l
</textarea>
<br />
output (detail) from running the above command -
<br />
<a href="img/ubuntuiscsi3.png"><IMG SRC="img/ubuntuiscsi3.png" float=left width=85% margin-right=1% margin-bottom=0.5em border=1></a>
</div>





<p class="break3em">
On the test system the iSCSI <font class="file">Target</font> attached earlier was identified as <font class="file">/dev/sdb</font> by checking the attributes of the devices listed when running the preceding command (<font class="file">fdisk -l</font>).
</p>












<a name="stage2"></a>
<h3 class="breaktop"><u>Stage 2</u></h3>

<div>
Having successfully attached and identified the device name of the iSCSI <font class="file">Target</font> in stage 1 (see <a class="glossary" href="iscsi_ubuntu.htm#stage1">here</a>), proceed with the installation. <font class="file">ubuntu</font> and <font class="file">lubuntu</font> both have desktop shortcuts for the installer -
<br >
<font class="file">ubuntu</font> -
<br />
<a href="img/ubuntuiscsi4.jpg"><IMG SRC="img/ubuntuiscsi4.jpg" float=left width=90% margin-right=1% margin-bottom=0.5em border=1></a>
<br />
<font class="file">lubuntu</font> -
<br />
<a href="img/ubuntuiscsi5.jpg"><IMG SRC="img/ubuntuiscsi5.jpg" float=left width=90% margin-right=1% margin-bottom=0.5em border=1></a>
</div>




<p class="break3em">
The majority of the installation screens/options are self explanatory. The following instructions focus on the steps required to prepare and select the iSCSI <font class="file">Target</font>.
</p>



<div class="break3em">
When prompted for <b>Installation type</b>, select <font class="file">Something else</font> &gt; <font class="file">Continue</font> -
<br >
<a href="img/ubuntuiscsi6.png"><IMG SRC="img/ubuntuiscsi6.png" float=left width=90% margin-right=1% margin-bottom=0.5em border=1></a>
</div>


<div class="break3em">
The next screen should display a list of devices. Select the iSCSI <font class="file">Target</font> from the list (identified earlier as <font class="file">/dev/sdb</font> on the test system). As this is a raw disk, click on the <font class="file">New Partition Table...</font> button - 
<br >
<a href="img/ubuntuiscsi7.png"><IMG SRC="img/ubuntuiscsi7.png" float=left width=90% margin-right=1% margin-bottom=0.5em border=1></a>
</div>


<div class="break3em">
Click on <font class="file">Continue</font> on the <font class="file">Create new empty partition table on this device?</font> screen -
<br >
<a href="img/ubuntuiscsi8.png"><IMG SRC="img/ubuntuiscsi8.png" float=left width=90% margin-right=1% margin-bottom=0.5em border=1></a>
</div>





<div class="break3em">
Select <font class="file">free space</font> on the relevant device and then click on the <font class="file">+</font> button -
<br >
<a href="img/ubuntuiscsi9.png"><IMG SRC="img/ubuntuiscsi9.png" float=left width=90% margin-right=1% margin-bottom=0.5em border=1></a>
</div>



<p class="break3em">
On the <font class="file">Create partition</font> options screen, select the required file system (<font class="file">Ext3</font> used on the test system) &gt; select <font class="file">Mount point:</font> as <font class="file">/</font> (root) &gt; <font class="file">OK</font> -
<br />
<img src="img/ubuntuiscsi10.png" border=1>
</p>


<div class="break3em">
Select the iSCSI <font class="file">Target</font> device in the <font class="file">Device for boot loader installation:</font> field (<font class="file">/dev/sdb</font> on the test system) &gt; <font class="file">Install Now</font> -
<br >
<a href="img/ubuntuiscsi11.png"><IMG SRC="img/ubuntuiscsi11.png" float=left width=90% margin-right=1% margin-bottom=0.5em border=1></a>
</div>


<div class="break3em">
A warning about not selecting a swap space will be displayed &gt; ignore and click on <font class="file">Continue</font> - 
<br >
<a href="img/ubuntuiscsi12.png"><IMG SRC="img/ubuntuiscsi12.png" float=left width=90% margin-right=1% margin-bottom=0.5em border=1></a>
</div>


<div class="break3em">
<font class="file">Write the changes to disks?</font> screen/warning. Double check to ensure that the correct device is selected &gt; <font class="file">Continue</font>
<br >
<a href="img/ubuntuiscsi13.png"><IMG SRC="img/ubuntuiscsi13.png" float=left width=90% margin-right=1% margin-bottom=0.5em border=1></a>
</div>



<p class="break3em">
Complete the remaining screens as required and proceed with the installation. 
</p>




<div class="break3em">
After installing the operating system you will be prompted to <font class="file">Restart Now</font> or <font class="file">Continue Testing</font>. Select <font class="file">Continue Testing</font> and proceed to <a class="glossary" href="iscsi_ubuntu.htm#stage3">stage 3</font> -
<br >
<a href="img/ubuntuiscsi14.png"><IMG SRC="img/ubuntuiscsi14.png" float=left width=90% margin-right=1% margin-bottom=0.5em border=1></a>
</div>





<div class="break3em">
<u><b><font color="red">NOTE</font></b> - if you accidently selected the <font class="file">Restart now</font> option then repeat Stage 1 (<a class="glossary" href="iscsi_ubuntu.htm#stage1">here</a>) and then proceed to <a class="glossary" href="iscsi_ubuntu.htm#stage3">Stage 3</a></u>.
</div>



















<a name="stage3"></a>
<h3 class="breaktop"><u>Stage 3</u></h3>


<p>
Remember that the iSCSI <font class="file">Target</font> attached earlier was identified as <font class="file">/dev/sdb</font>. The partition containing the operating system and boot loader files is device <font class="file">/dev/sdb1</font>.
</p>



<p class="break3em">
Create a directory to use as a mount point for the iSCSI <font class="file">Target</font> partition (<font class="file">/dev/sdb1</font>) -
<br />
<textarea style="font-size:12px" cols="80" rows="3" align="left" readonly>
mkdir /mnt/temp
</textarea>
</p>


<p class="break3em">
Mount <font class="file">/dev/sdb1</font> to the directory created in the preceding step -
<br />
<textarea style="font-size:12px" cols="80" rows="3" align="left" readonly>
mount /dev/sdb1 /mnt/temp
</textarea>
</p>


<p class="break3em">
Change the root directory to the device mounted in the preceding step. After running this command, all additional commands will be executed on the new root device. This essentially allows changes to be made (including software installation) to the offline system -
<br />
<textarea style="font-size:12px" cols="80" rows="3" align="left" readonly>
chroot /mnt/temp
</textarea>
</p>


<p class="break3em">
Mount the <font class="file">/proc</font> Filesystem - 
<br />
<textarea style="font-size:12px" cols="80" rows="3" align="left" readonly>
mount -t proc none /proc
</textarea>
</p>


<p class="break3em">
Add the DNS IP address to <font class="file">/etc/resolv.conf</font>. It was not possible to install any software on the test system without completing this step. 
<br />
<textarea style="font-size:12px" cols="80" rows="3" align="left" readonly>
echo "nameserver 192.168.1.254" >> /etc/resolv.conf
</textarea>
</p>


<p class="break3em">
Create a <font class="file">hostname</font> for the <font class="file">Client</font> system -
<br />
<textarea style="font-size:12px" cols="80" rows="3" align="left" readonly>
hostname netboot
</textarea>
</p>


<p class="break3em">
Download the package lists from the repositories to get information about any new versions and dependencies (recommended before installing any new software/packages). Although this step was completed earlier, it needs to be repeated on the new root device (the offline system on the iSCSI <font class="file">Target</font>) - 
<br />
<textarea style="font-size:12px" cols="80" rows="3" align="left" readonly>
apt-get update
</textarea>
</p>


<p class="break3em">
Install the <font class="file">initramfs-tools</font> software package on the offline system -
<br />
<textarea style="font-size:12px" cols="80" rows="3" align="left" readonly>
apt-get install initramfs-tools
</textarea>
</p>


<p class="break3em">
Install the <font class="file">open-iscsi</font> software package on the offline system -
<br />
<textarea style="font-size:12px" cols="80" rows="3" align="left" readonly>
apt-get install open-iscsi
</textarea>
</p>


<p class="break3em">
Install the <font class="file">sysv-rc-conf</font> software package on the offline system -
<br />
<textarea style="font-size:12px" cols="80" rows="3" align="left" readonly>
apt-get install sysv-rc-conf
</textarea>
</p>


<p class="break3em">
Add the line "iscsi" to <font class="file">/etc/initramfs-tools/modules</font> -
<br />
<textarea style="font-size:12px" cols="80" rows="3" align="left" readonly>
echo "iscsi" >> /etc/initramfs-tools/modules
</textarea>
</p>


<p class="break3em">
Create file <font class="file">/etc/iscsi/initiatorname.iscsi</font> and add the <font class="file">Client</font> Initiator name (required by some software <font class="file">Targets</font> to authenticate connections) -
<br />
<textarea style="font-size:12px" cols="80" rows="3" align="left" readonly>
echo "InitiatorName=iqn.client" > /etc/iscsi/initiatorname.iscsi
</textarea>
</p>


<p class="break3em">
Execute <font class="file">Touch</font> command on file <font class="file">/etc/iscsi/iscsi.initramfs</font>. The following information has been copied from <a class="glossary" target="_blank" href="http://www.linfo.org/touch.html">here</a> - "<i>...The touch command is the easiest way to create new, empty files. It is also used to change the timestamps (i.e., dates and times of the most recent access and modification) on existing files and directories....A nice feature of touch is that, in contrast to some commands such as cp (which is used to copy files and directories) and mv (which is used to move or rename files and directories), it does not automatically overwrite (i.e., erase the contents of) existing files with the same name. Rather, it merely changes the last access times for such files to the current time...</i>" -
<br />
<textarea style="font-size:12px" cols="80" rows="3" align="left" readonly>
touch /etc/iscsi/iscsi.initramfs
</textarea>
</p>


<p class="break3em">
Update/rebuild the initramfs file - the Initial RAM File System loaded by the kernel containing the device drivers and tools required to boot from the final root file system (incorporating the information required for connecting to the iSCSI <font class="file">Target</font> during the boot process) -
<br />
<textarea style="font-size:12px" cols="80" rows="3" align="left" readonly>
update-initramfs -u
</textarea>
</p>







<a name="stage4"></a>
<h3 class="breaktop"><u>Stage 4</u></h3>


<p>
Some commands will need to be added to the Grub configuration file (<font class="file">/boot/grub/grub.cfg</font>) to successfully connect to the iSCSI <font class="file">Target</font> during the boot process. 
</p>



<p class="break3em">
<b><u><font color="red">NOTE</font></u></b> - do <u>NOT</u> edit any settings in this file unless you know what you are doing. Whilst it is necessary to make the additions detailed below, changing other settings may break the boot process!
</p>


<p class="break3em">
Example <font class="file">grub.cfg</font> (copied from the <font class="file">Client</font> system before any edits were made) -
<br />
<textarea style="font-size:12px" cols="80" rows="10" align="left" wrap="OFF" readonly>
#
# DO NOT EDIT THIS FILE
#
# It is automatically generated by grub-mkconfig using templates
# from /etc/grub.d and settings from /etc/default/grub
#

### BEGIN /etc/grub.d/00_header ###
if [ -s $prefix/grubenv ]; then
  set have_grubenv=true
  load_env
fi
if [ "${next_entry}" ] ; then
   set default="${next_entry}"
   set next_entry=
   save_env next_entry
   set boot_once=true
else
   set default="0"
fi

if [ x"${feature_menuentry_id}" = xy ]; then
  menuentry_id_option="--id"
else
  menuentry_id_option=""
fi

export menuentry_id_option

if [ "${prev_saved_entry}" ]; then
  set saved_entry="${prev_saved_entry}"
  save_env saved_entry
  set prev_saved_entry=
  save_env prev_saved_entry
  set boot_once=true
fi

function savedefault {
  if [ -z "${boot_once}" ]; then
    saved_entry="${chosen}"
    save_env saved_entry
  fi
}
function recordfail {
  set recordfail=1
  if [ -n "${have_grubenv}" ]; then if [ -z "${boot_once}" ]; then save_env recordfail; fi; fi
}
function load_video {
  if [ x$feature_all_video_module = xy ]; then
    insmod all_video
  else
    insmod efi_gop
    insmod efi_uga
    insmod ieee1275_fb
    insmod vbe
    insmod vga
    insmod video_bochs
    insmod video_cirrus
  fi
}

if [ x$feature_default_font_path = xy ] ; then
   font=unicode
else
insmod part_msdos
insmod ext2
set root='hd1,msdos1'
if [ x$feature_platform_search_hint = xy ]; then
  search --no-floppy --fs-uuid --set=root --hint-bios=hd1,msdos1 --hint-efi=hd1,msdos1 --hint-baremetal=ahci1,msdos1  2b665d86-5887-4700-b71a-9bfd2ea11cdf
else
  search --no-floppy --fs-uuid --set=root 2b665d86-5887-4700-b71a-9bfd2ea11cdf
fi
    font="/usr/share/grub/unicode.pf2"
fi

if loadfont $font ; then
  set gfxmode=auto
  load_video
  insmod gfxterm
  set locale_dir=$prefix/locale
  set lang=en_GB
  insmod gettext
fi
terminal_output gfxterm
if [ "${recordfail}" = 1 ] ; then
  set timeout=30
else
  if [ x$feature_timeout_style = xy ] ; then
    set timeout_style=menu
    set timeout=10
  # Fallback normal timeout code in case the timeout_style feature is
  # unavailable.
  else
    set timeout=10
  fi
fi
### END /etc/grub.d/00_header ###

### BEGIN /etc/grub.d/05_debian_theme ###
set menu_color_normal=white/black
set menu_color_highlight=black/light-gray
if background_color 44,0,30,0; then
  clear
fi
### END /etc/grub.d/05_debian_theme ###

### BEGIN /etc/grub.d/10_linux ###
function gfxmode {
	set gfxpayload="${1}"
	if [ "${1}" = "keep" ]; then
		set vt_handoff=vt.handoff=7
	else
		set vt_handoff=
	fi
}
if [ "${recordfail}" != 1 ]; then
  if [ -e ${prefix}/gfxblacklist.txt ]; then
    if hwmatch ${prefix}/gfxblacklist.txt 3; then
      if [ ${match} = 0 ]; then
        set linux_gfx_mode=keep
      else
        set linux_gfx_mode=text
      fi
    else
      set linux_gfx_mode=text
    fi
  else
    set linux_gfx_mode=keep
  fi
else
  set linux_gfx_mode=text
fi
export linux_gfx_mode
menuentry 'Ubuntu' --class ubuntu --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-simple-2b665d86-5887-4700-b71a-9bfd2ea11cdf' {
	recordfail
	load_video
	gfxmode $linux_gfx_mode
	insmod gzio
	if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
	insmod part_msdos
	insmod ext2
	set root='hd1,msdos1'
	if [ x$feature_platform_search_hint = xy ]; then
	  search --no-floppy --fs-uuid --set=root --hint-bios=hd1,msdos1 --hint-efi=hd1,msdos1 --hint-baremetal=ahci1,msdos1  2b665d86-5887-4700-b71a-9bfd2ea11cdf
	else
	  search --no-floppy --fs-uuid --set=root 2b665d86-5887-4700-b71a-9bfd2ea11cdf
	fi
	linux	/boot/vmlinuz-4.4.0-64-generic root=UUID=2b665d86-5887-4700-b71a-9bfd2ea11cdf ro  quiet splash $vt_handoff
	initrd	/boot/initrd.img-4.4.0-64-generic
}
submenu 'Advanced options for Ubuntu' $menuentry_id_option 'gnulinux-advanced-2b665d86-5887-4700-b71a-9bfd2ea11cdf' {
	menuentry 'Ubuntu, with Linux 4.4.0-64-generic' --class ubuntu --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-4.4.0-64-generic-advanced-2b665d86-5887-4700-b71a-9bfd2ea11cdf' {
		recordfail
		load_video
		gfxmode $linux_gfx_mode
		insmod gzio
		if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
		insmod part_msdos
		insmod ext2
		set root='hd1,msdos1'
		if [ x$feature_platform_search_hint = xy ]; then
		  search --no-floppy --fs-uuid --set=root --hint-bios=hd1,msdos1 --hint-efi=hd1,msdos1 --hint-baremetal=ahci1,msdos1  2b665d86-5887-4700-b71a-9bfd2ea11cdf
		else
		  search --no-floppy --fs-uuid --set=root 2b665d86-5887-4700-b71a-9bfd2ea11cdf
		fi
		echo	'Loading Linux 4.4.0-64-generic ...'
		linux	/boot/vmlinuz-4.4.0-64-generic root=UUID=2b665d86-5887-4700-b71a-9bfd2ea11cdf ro  quiet splash $vt_handoff
		echo	'Loading initial ramdisk ...'
		initrd	/boot/initrd.img-4.4.0-64-generic
	}
	menuentry 'Ubuntu, with Linux 4.4.0-64-generic (upstart)' --class ubuntu --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-4.4.0-64-generic-init-upstart-2b665d86-5887-4700-b71a-9bfd2ea11cdf' {
		recordfail
		load_video
		gfxmode $linux_gfx_mode
		insmod gzio
		if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
		insmod part_msdos
		insmod ext2
		set root='hd1,msdos1'
		if [ x$feature_platform_search_hint = xy ]; then
		  search --no-floppy --fs-uuid --set=root --hint-bios=hd1,msdos1 --hint-efi=hd1,msdos1 --hint-baremetal=ahci1,msdos1  2b665d86-5887-4700-b71a-9bfd2ea11cdf
		else
		  search --no-floppy --fs-uuid --set=root 2b665d86-5887-4700-b71a-9bfd2ea11cdf
		fi
		echo	'Loading Linux 4.4.0-64-generic ...'
		linux	/boot/vmlinuz-4.4.0-64-generic root=UUID=2b665d86-5887-4700-b71a-9bfd2ea11cdf ro  quiet splash $vt_handoff init=/sbin/upstart
		echo	'Loading initial ramdisk ...'
		initrd	/boot/initrd.img-4.4.0-64-generic
	}
	menuentry 'Ubuntu, with Linux 4.4.0-64-generic (recovery mode)' --class ubuntu --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-4.4.0-64-generic-recovery-2b665d86-5887-4700-b71a-9bfd2ea11cdf' {
		recordfail
		load_video
		insmod gzio
		if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
		insmod part_msdos
		insmod ext2
		set root='hd1,msdos1'
		if [ x$feature_platform_search_hint = xy ]; then
		  search --no-floppy --fs-uuid --set=root --hint-bios=hd1,msdos1 --hint-efi=hd1,msdos1 --hint-baremetal=ahci1,msdos1  2b665d86-5887-4700-b71a-9bfd2ea11cdf
		else
		  search --no-floppy --fs-uuid --set=root 2b665d86-5887-4700-b71a-9bfd2ea11cdf
		fi
		echo	'Loading Linux 4.4.0-64-generic ...'
		linux	/boot/vmlinuz-4.4.0-64-generic root=UUID=2b665d86-5887-4700-b71a-9bfd2ea11cdf ro recovery nomodeset 
		echo	'Loading initial ramdisk ...'
		initrd	/boot/initrd.img-4.4.0-64-generic
	}
	menuentry 'Ubuntu, with Linux 4.4.0-21-generic' --class ubuntu --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-4.4.0-21-generic-advanced-2b665d86-5887-4700-b71a-9bfd2ea11cdf' {
		recordfail
		load_video
		gfxmode $linux_gfx_mode
		insmod gzio
		if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
		insmod part_msdos
		insmod ext2
		set root='hd1,msdos1'
		if [ x$feature_platform_search_hint = xy ]; then
		  search --no-floppy --fs-uuid --set=root --hint-bios=hd1,msdos1 --hint-efi=hd1,msdos1 --hint-baremetal=ahci1,msdos1  2b665d86-5887-4700-b71a-9bfd2ea11cdf
		else
		  search --no-floppy --fs-uuid --set=root 2b665d86-5887-4700-b71a-9bfd2ea11cdf
		fi
		echo	'Loading Linux 4.4.0-21-generic ...'
		linux	/boot/vmlinuz-4.4.0-21-generic root=UUID=2b665d86-5887-4700-b71a-9bfd2ea11cdf ro  quiet splash $vt_handoff
		echo	'Loading initial ramdisk ...'
		initrd	/boot/initrd.img-4.4.0-21-generic
	}
	menuentry 'Ubuntu, with Linux 4.4.0-21-generic (upstart)' --class ubuntu --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-4.4.0-21-generic-init-upstart-2b665d86-5887-4700-b71a-9bfd2ea11cdf' {
		recordfail
		load_video
		gfxmode $linux_gfx_mode
		insmod gzio
		if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
		insmod part_msdos
		insmod ext2
		set root='hd1,msdos1'
		if [ x$feature_platform_search_hint = xy ]; then
		  search --no-floppy --fs-uuid --set=root --hint-bios=hd1,msdos1 --hint-efi=hd1,msdos1 --hint-baremetal=ahci1,msdos1  2b665d86-5887-4700-b71a-9bfd2ea11cdf
		else
		  search --no-floppy --fs-uuid --set=root 2b665d86-5887-4700-b71a-9bfd2ea11cdf
		fi
		echo	'Loading Linux 4.4.0-21-generic ...'
		linux	/boot/vmlinuz-4.4.0-21-generic root=UUID=2b665d86-5887-4700-b71a-9bfd2ea11cdf ro  quiet splash $vt_handoff init=/sbin/upstart
		echo	'Loading initial ramdisk ...'
		initrd	/boot/initrd.img-4.4.0-21-generic
	}
	menuentry 'Ubuntu, with Linux 4.4.0-21-generic (recovery mode)' --class ubuntu --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-4.4.0-21-generic-recovery-2b665d86-5887-4700-b71a-9bfd2ea11cdf' {
		recordfail
		load_video
		insmod gzio
		if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
		insmod part_msdos
		insmod ext2
		set root='hd1,msdos1'
		if [ x$feature_platform_search_hint = xy ]; then
		  search --no-floppy --fs-uuid --set=root --hint-bios=hd1,msdos1 --hint-efi=hd1,msdos1 --hint-baremetal=ahci1,msdos1  2b665d86-5887-4700-b71a-9bfd2ea11cdf
		else
		  search --no-floppy --fs-uuid --set=root 2b665d86-5887-4700-b71a-9bfd2ea11cdf
		fi
		echo	'Loading Linux 4.4.0-21-generic ...'
		linux	/boot/vmlinuz-4.4.0-21-generic root=UUID=2b665d86-5887-4700-b71a-9bfd2ea11cdf ro recovery nomodeset 
		echo	'Loading initial ramdisk ...'
		initrd	/boot/initrd.img-4.4.0-21-generic
	}
}

### END /etc/grub.d/10_linux ###

### BEGIN /etc/grub.d/20_linux_xen ###

### END /etc/grub.d/20_linux_xen ###

### BEGIN /etc/grub.d/20_memtest86+ ###
menuentry 'Memory test (memtest86+)' {
	insmod part_msdos
	insmod ext2
	set root='hd1,msdos1'
	if [ x$feature_platform_search_hint = xy ]; then
	  search --no-floppy --fs-uuid --set=root --hint-bios=hd1,msdos1 --hint-efi=hd1,msdos1 --hint-baremetal=ahci1,msdos1  2b665d86-5887-4700-b71a-9bfd2ea11cdf
	else
	  search --no-floppy --fs-uuid --set=root 2b665d86-5887-4700-b71a-9bfd2ea11cdf
	fi
	knetbsd	/boot/memtest86+.elf
}
menuentry 'Memory test (memtest86+, serial console 115200)' {
	insmod part_msdos
	insmod ext2
	set root='hd1,msdos1'
	if [ x$feature_platform_search_hint = xy ]; then
	  search --no-floppy --fs-uuid --set=root --hint-bios=hd1,msdos1 --hint-efi=hd1,msdos1 --hint-baremetal=ahci1,msdos1  2b665d86-5887-4700-b71a-9bfd2ea11cdf
	else
	  search --no-floppy --fs-uuid --set=root 2b665d86-5887-4700-b71a-9bfd2ea11cdf
	fi
	linux16	/boot/memtest86+.bin console=ttyS0,115200n8
}
### END /etc/grub.d/20_memtest86+ ###

### BEGIN /etc/grub.d/30_os-prober ###
menuentry 'Windows Vista (loader) (on /dev/sda1)' --class windows --class os $menuentry_id_option 'osprober-chain-B602-96F8' {
	insmod part_msdos
	insmod fat
	set root='hd0,msdos1'
	if [ x$feature_platform_search_hint = xy ]; then
	  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,msdos1 --hint-efi=hd0,msdos1 --hint-baremetal=ahci0,msdos1  B602-96F8
	else
	  search --no-floppy --fs-uuid --set=root B602-96F8
	fi
	parttool ${root} hidden-
	chainloader +1
}
menuentry 'Windows 8 (loader) (on /dev/sda2)' --class windows --class os $menuentry_id_option 'osprober-chain-E2B679DCB679B221' {
	insmod part_msdos
	insmod ntfs
	set root='hd0,msdos2'
	if [ x$feature_platform_search_hint = xy ]; then
	  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,msdos2 --hint-efi=hd0,msdos2 --hint-baremetal=ahci0,msdos2  E2B679DCB679B221
	else
	  search --no-floppy --fs-uuid --set=root E2B679DCB679B221
	fi
	parttool ${root} hidden-
	drivemap -s (hd0) ${root}
	chainloader +1
}
set timeout_style=menu
if [ "${timeout}" = 0 ]; then
  set timeout=10
fi
### END /etc/grub.d/30_os-prober ###

### BEGIN /etc/grub.d/30_uefi-firmware ###
### END /etc/grub.d/30_uefi-firmware ###

### BEGIN /etc/grub.d/40_custom ###
# This file provides an easy way to add custom menu entries.  Simply type the
# menu entries you want to add after this comment.  Be careful not to change
# the 'exec tail' line above.
### END /etc/grub.d/40_custom ###

### BEGIN /etc/grub.d/41_custom ###
if [ -f  ${config_directory}/custom.cfg ]; then
  source ${config_directory}/custom.cfg
elif [ -z "${config_directory}" -a -f  $prefix/custom.cfg ]; then
  source $prefix/custom.cfg;
fi
### END /etc/grub.d/41_custom ###
</textarea>
</p>



<p class="break3em">
And the line that requires editing (in the <font class="file">menuentry 'Ubuntu'</font> section) -
<br />
<textarea style="font-size:12px" cols="80" rows="3" align="left" wrap="OFF" readonly>
linux	/boot/vmlinuz-4.4.0-64-generic root=UUID=2b665d86-5887-4700-b71a-9bfd2ea11cdf ro  quiet splash $vt_handoff
</textarea>
</p>


<p class="break3em">
The following commands will need to be added -
<ul>
<li><b>ISCSI_INITIATOR=</b></li>
<li><b>ISCSI_TARGET_NAME=</b></li>
<li><b>ISCSI_TARGET_IP=</b></li>
<li><b>ISCSI_TARGET_PORT=</b></li>
</ul>
</p>



<p class="break3em">
Using the settings for the test system -
<ul>
<li><b>ISCSI_INITIATOR=</b>iqn.client</li>
<li><b>ISCSI_TARGET_NAME=</b>iqn.target</li>
<li><b>ISCSI_TARGET_IP=</b>192.168.1.1</li>
<li><b>ISCSI_TARGET_PORT=</b>3260</li>
</ul>
</p>


<p class="break3em">
Due to security permissions, the easiet way to edit the <font class="file">grub.cfg</font> file is to run the following command -
<br />
<textarea style="font-size:12px" cols="80" rows="3" align="left" readonly>
nano /boot/grub/grub.cfg
</textarea>
</p>

<p class="break3em">
After editing the file, press [<b>Ctrl</b>]+[<b>O</b>] to write the changes to the file, and [<b>Ctrl</b>]+[<b>X</b>] to exit the text editor. 
</p>



<p class="break3em">
Edited line in <font class="file">grub.cfg</font> -
<br />
<textarea style="font-size:12px" cols="80" rows="3" align="left" wrap="OFF" readonly>
linux	/boot/vmlinuz-4.4.0-64-generic ISCSI_INITIATOR=iqn.client ISCSI_TARGET_NAME=iqn.target ISCSI_TARGET_IP=192.168.1.1 ISCSI_TARGET_PORT=3260 root=UUID=2b665d86-5887-4700-b71a-9bfd2ea11cdf ro  quiet splash $vt_handoff
</textarea>
</p>













<a name="stage5"></a>
<h3 class="breaktop"><u>Stage 5</u></h3>



<p>
The <font class="file">/etc/network/interfaces</font> file will need to be edited to stop the operating system from reconfiguring any settings on the Ethernet interface. Set device <font class="file">eth0</font> to manual - <font class="file">eth0</font> is the first ethernet interface on the system. 
</p>



<p class="break3em">
The following information will need to be added to <font class="file">/etc/network/interfaces</font> -  
<br />
<textarea style="font-size:12px" cols="80" rows="4" align="left" readonly>
auto eth0
iface eth0 inet manual
</textarea>
</p>



<p class="break3em">
Run the following command to open <font class="file">/etc/network/interfaces</font> for editing -
<br />
<textarea style="font-size:12px" cols="80" rows="3" align="left" readonly>
nano /etc/network/interfaces
</textarea>
</p>


<br />
The file contents <u>after</u> editing the file on the test system -
<br />
<textarea style="font-size:12px" cols="80" rows="10" align="left" readonly>
# interfaces(5) file used by ifup(8) and ifdown(8)
auto lo
iface lo inet loopback
auto enp0s25
iface enp0s25 inet manual

auto eth0
iface eth0 inet manual
</textarea>
</p>



<p class="break3em">
If you have multiple network interfaces on the <font class="file">Client</font> system, then consider adding additional settings. E.g. - 
<br />
<textarea style="font-size:12px" cols="80" rows="13" align="left" readonly>
# interfaces(5) file used by ifup(8) and ifdown(8)
auto lo
iface lo inet loopback
auto enp0s25
iface enp0s25 inet manual

auto eth0
iface eth0 inet manual

auto eth1
iface eth1 inet manual
</textarea>
</p>






<a name="stage6"></a>
<h3 class="breaktop"><u>Stage 6</u></h3>

<p>
<u><b><font color="red">NOTE</font></b> - you can ignore this section if using iPXE or chainloading iPXE from a different Network Boot Program. </u>
</p>


<p class="break3em">
Identify the relevant <font class="file">kernel</font> and <font class="file">initrd</font> files from the <font class="file">menuentry 'Ubuntu'</font> section in the modified <font class="file">/boot/grub/grub.cfg</font> (refer to <a class="glossary" href="iscsi_ubuntu.htm#stage4">stage 4</a>). 
</p>


<p class="break3em">
Using the test system as an example, the <font class="file">linux</font> and <font class="file">initrd</font> lines in the <font class="file">menuentry 'Ubuntu'</font> section are as follows - 
<br />
<textarea style="font-size:12px" cols="80" rows="4" align="left" wrap="OFF" readonly>
linux	/boot/vmlinuz-4.4.0-64-generic ISCSI_INITIATOR=iqn.client ISCSI_TARGET_NAME=iqn.target ISCSI_TARGET_IP=192.168.1.1 ISCSI_TARGET_PORT=3260 root=UUID=2b665d86-5887-4700-b71a-9bfd2ea11cdf ro  quiet splash $vt_handoff
initrd	/boot/initrd.img-4.4.0-64-generic
</textarea>
</p>


<p class="break3em">
The <font class="file">kernel</font> file can consequently be identified as <font class="file">/boot/vmlinuz-4.4.0-64-generic</font>, and the <font class="file">initrd</font> file as <font class="file">/boot/initrd.img-4.4.0-64-generic</font>. 
</p>


<p class="break3em">
Copy the <font class="file">kernel</font> and <font class="file">initrd</font> files to your <font class="file">Tiny PXE Server</font> root directory. E.g. - 
<ul>
<li><font class="file">C:\pxesrv\files\vmlinuz-4.4.0-64-generic</font></li>
<li><font class="file">C:\pxesrv\files\initrd.img-4.4.0-64-generic</font></li>
</ul>
You may need to change the file permissions on these files before copying them (e.g. using the chmod command).
</p>














<a name="boot"></a>
<h3 class="breaktop"><u>Boot</u></h3>


<p>
Assuming all of the steps above have been completed, shutdown <font class="file">ubuntu</font>/<font class="file">lubuntu</font> and add the required settings for your Network Bootstrap Program...  
</p>


<p>
<ul>
<li><a class="glossary" href="iscsi_ubuntu.htm#grub4dos1">grub4dos settings</a></li>
<li><a class="glossary" href="iscsi_ubuntu.htm#grub4dos2">grub4dos settings (Chainload iPXE)</a></li>
<li><a class="glossary" href="iscsi_ubuntu.htm#pxelinux1">pxelinux settings</a></li>
<li><a class="glossary" href="iscsi_ubuntu.htm#pxelinux2">pxelinux settings (Chainload iPXE)</a></li>
<li><a class="glossary" href="iscsi_ubuntu.htm#ipxe">iPXE Settings</a></li>
<li><a class="glossary" href="iscsi_ubuntu.htm#ipxe_scripts">iPXE Scripts</a></li>
</ul>
</p>


<p>
...then boot the <font class="file">Client</font> system. 
</p>







<a name="grub4dos1"></a>
<h3 class="breaktop"><u>grub4dos Settings</u></h3>

<p>
Remember to ensure that the required files are copied to your <font class="file">Tiny PXE Server</font> root directory - 
<ul>
<li><font class="file">C:\pxesrv\files\grldr</font></li>
<li><font class="file">C:\pxesrv\files\menu.lst\default</font></li>
</ul>
</p>

<p>
You will also need to ensure that the <font class="file">kernel</font> and <font class="file">initrd</font> were copied in <a class="glossary" href="iscsi_ubuntu.htm#stage6">Stage 6</a> (the file names may vary in different builds/versions) - 
<ul>
<li><font class="file">C:\pxesrv\files\vmlinuz-4.4.0-64-generic</font></li>
<li><font class="file">C:\pxesrv\files\initrd.img-4.4.0-64-generic</font></li>
</ul>
</p>



<p>
<font class="file">linux</font> and <font class="file">initrd</font> lines copied from the <font class="file">menuentry 'Ubuntu'</font> section in the modified <font class="file">/boot/grub/grub.cfg</font> (refer to <a class="glossary" href="iscsi_ubuntu.htm#stage4">stage 4</a>)..... 
<br />
<textarea style="font-size:12px" cols="80" rows="4" align="left" wrap="OFF" readonly>
linux	/boot/vmlinuz-4.4.0-64-generic ISCSI_INITIATOR=iqn.client ISCSI_TARGET_NAME=iqn.target ISCSI_TARGET_IP=192.168.1.1 ISCSI_TARGET_PORT=3260 root=UUID=2b665d86-5887-4700-b71a-9bfd2ea11cdf ro  quiet splash $vt_handoff
initrd	/boot/initrd.img-4.4.0-64-generic
</textarea>
</p>

<p>
.....Converted to the grub4dos menu format <font class="file"></font> - 
<br />
<textarea style="font-size:12px" cols="80" rows="6" align="left" wrap="OFF" readonly>
title ubuntu (iSCSI)
kernel (pd)/vmlinuz-4.4.0-64-generic ISCSI_INITIATOR=iqn.client ISCSI_TARGET_NAME=iqn.target ISCSI_TARGET_IP=192.168.1.1 ISCSI_TARGET_PORT=3260 root=UUID=2b665d86-5887-4700-b71a-9bfd2ea11cdf ro  quiet splash $vt_handoff
initrd (pd)/initrd.img-4.4.0-64-generic
</textarea>
<br />
Amend file names as required and add the menu entry to <font class="file">C:\pxesrv\files\menu.lst\default</font>.
</p>









<a name="grub4dos2"></a>
<h3 class="breaktop"><u>grub4dos settings (Chainload iPXE)</u></h3>

<p>
If using this method iPXE can be used to SANBOOT the iSCSI <font class="file">Target</font> - kernel and initrd files do not need copying to the <font class="file">Server</font>.
</p>


<p>
Add the following to <font class="file">C:\pxesrv\files\menu.lst\default</font> (create this file if required) - 
<br />
<textarea style="font-size:12px" cols="80" rows="6" align="left" readonly>
title ubuntu (iSCSI)
pxe keep
kernel (pd)/ipxe.lkrn
initrd (pd)/ubuntu.iscsi.txt
</textarea>
</p>


<p>
Contents of <font class="file">C:\pxesrv\files\ubuntu.iscsi.txt</font> (create this file if required) - 
<br />
<textarea style="font-size:12px" cols="80" rows="7" align="left" readonly>
#!ipxe
dhcp net0 && echo IP address: ${net0/ip} ; echo Subnet mask: ${net0/netmask}
set gateway 0.0.0.0
sanboot iscsi:${dhcp-server}::::iqn.target
boot
</textarea>
</p>

<p>
Refer to the <a class="glossary" href="http://mistyrebootfiles.altervista.org/documents/TinyPXEServer/files/iscsiuri">iSCSI URI Syntax</a> section for information about iSCSI <font class="file">Target</font> device names.  
</p>









<a name="pxelinux1"></a>
<h3 class="breaktop"><u>pxelinux Settings</u></h3>

<p>
Remember to ensure that the required files are copied to your <font class="file">Tiny PXE Server</font> root directory - 
<ul>
<li><font class="file">C:\pxesrv\files\pxelinux.0</font></li>
<li><font class="file">C:\pxesrv\files\menu.c32</font></li>
<li><font class="file">C:\pxesrv\files\pxelinux.cfg\default</font></li>
</ul>
</p>

<p>
You will also need to ensure that the <font class="file">kernel</font> and <font class="file">initrd</font> were copied in <a class="glossary" href="iscsi_ubuntu.htm#stage6">Stage 6</a> (the file names may vary in different builds/versions) - 
<ul>
<li><font class="file">C:\pxesrv\files\vmlinuz-4.4.0-64-generic</font></li>
<li><font class="file">C:\pxesrv\files\initrd.img-4.4.0-64-generic</font></li>
</ul>
</p>

<p>
<font class="file">linux</font> and <font class="file">initrd</font> lines copied from the <font class="file">menuentry 'Ubuntu'</font> section in the modified <font class="file">/boot/grub/grub.cfg</font> (refer to <a class="glossary" href="iscsi_ubuntu.htm#stage4">stage 4</a>)..... 
<br />
<textarea style="font-size:12px" cols="80" rows="4" align="left" wrap="OFF" readonly>
linux	/boot/vmlinuz-4.4.0-64-generic ISCSI_INITIATOR=iqn.client ISCSI_TARGET_NAME=iqn.target ISCSI_TARGET_IP=192.168.1.1 ISCSI_TARGET_PORT=3260 root=UUID=2b665d86-5887-4700-b71a-9bfd2ea11cdf ro  quiet splash $vt_handoff
initrd	/boot/initrd.img-4.4.0-64-generic
</textarea>
</p>

<p>
.....Converted to the pxelinux menu format <font class="file"></font> - 
<br />
<textarea style="font-size:12px" cols="80" rows="6" align="left" wrap="OFF" readonly>
label ubuntuiscsi
  menu label ubuntu (iSCSI)
  kernel vmlinuz-4.4.0-64-generic
  append initrd=initrd.img-4.4.0-64-generic ISCSI_INITIATOR=iqn.client ISCSI_TARGET_NAME=iqn.target ISCSI_TARGET_IP=192.168.1.1 ISCSI_TARGET_PORT=3260 root=UUID=2b665d86-5887-4700-b71a-9bfd2ea11cdf ro  quiet splash $vt_handoff
</textarea>
<br />
Amend file names as required and add the menu entry to <font class="file">C:\pxesrv\files\pxelinux.cfg\default</font>.
</p>










<a name="pxelinux2"></a>
<h3 class="breaktop"><u>pxelinux settings (Chainload iPXE)</u></h3>


<p>
If using this method iPXE can be used to SANBOOT the iSCSI <font class="file">Target</font> - kernel and initrd files do not need copying to the <font class="file">Server</font>.
</p>



<p>
Add the following to <font class="file">C:\pxesrv\files\pxelinux.cfg\default</font> (create this file if required) - 
<br />
<textarea style="font-size:12px" cols="80" rows="6" align="left" readonly>
label ubuntuiscsi
  menu label ubuntu (iSCSI)
  kernel ipxe.lkrn
  append initrd=ubuntu.iscsi.txt
</textarea>
</p>


<p>
Contents of <font class="file">C:\pxesrv\files\ubuntu.iscsi.txt</font> (create this file if required) - 
<br />
<textarea style="font-size:12px" cols="80" rows="7" align="left" readonly>
#!ipxe
dhcp net0 && echo IP address: ${net0/ip} ; echo Subnet mask: ${net0/netmask}
set gateway 0.0.0.0
sanboot iscsi:${dhcp-server}::::iqn.target
boot
</textarea>
</p>

<p>
Refer to the <a class="glossary" href="http://mistyrebootfiles.altervista.org/documents/TinyPXEServer/files/iscsiuri">iSCSI URI Syntax</a> section for information about iSCSI <font class="file">Target</font> device names.  
</p>


















<a name="ipxe"></a>
<h3 class="breaktop"><u>iPXE settings</u></h3>

<p>
Remember to ensure that the required files are copied to your <font class="file">Tiny PXE Server</font> root directory - 
<ul>
<li><font class="file">C:\pxesrv\files\ipxe.pxe</font> (or <font class="file">C:\pxesrv\files\ipxe-undionly.kpxe</font>)</li>
<li><font class="file">C:\pxesrv\files\ipxe_menu.txt</font></li> 
</ul>
</p>



<p>
Add the following to the menu section of <font class="file">C:\pxesrv\files\ipxe_menu.txt</font> -
<br />
<textarea style="font-size:12px" cols="80" rows="3" align=left wrap=off readonly>
item ubuntuiscsi	Boot ubuntu from iSCSI
</textarea>
</p>



<p>
Add the following to the menu options section of <font class="file">C:\pxesrv\files\ipxe_menu.txt</font> -
<br />
<textarea style="font-size:12px" cols="80" rows="6" align=left wrap=off readonly>
:ubuntuiscsi
set gateway 0.0.0.0
sanboot iscsi:${dhcp-server}::::iqn.target
boot
</textarea>
</p>



<p>
E.g. - 
<br />
<textarea style="font-size:12px" cols="80" rows="17" align="left" wrap="OFF" readonly>
#!ipxe
set boot-url http://${dhcp-server}
set iscsi-target iscsi:${dhcp-server}::::iqn.target

#================ Main Menu =================
:menu
menu iPXE menu
item ubuntuiscsi	Boot ubuntu from iSCSI
choose target && goto ${target}
#============== End Main Menu ===============

:ubuntuiscsi
set gateway 0.0.0.0
sanboot iscsi:${dhcp-server}::::iqn.target
boot
</textarea>
<br />
<b>NOTE</b> - remember to change any references to <font class="file">${dhcp-server}</font> to <font class="file">${next-server}</font> if using ProxyDHCP.
</p>




<p>
Click on one of the following for <font class="file">config.ini</font> settings (edit to reflect your own setup) -
<ul>
<li><b>DHCP</b> - <a href="txt/config_dhcp_ipxe1.txt">here</a></li>
<li><b>Proxy DHCP</b> - <a href="txt/config_proxydhcp_ipxe1.txt">here</a></li>
</ul>
</p>









<a name="ipxe_scripts"></a>
<h3 class="breaktop"><u>iPXE Scripts</u></h3>


<p>
<font class="file">iPXE</font> menus are essentially scripts. It's also possible to specify a simple script to boot the iSCSI <font class="file">Target</font> using the <a class="glossary" href="pxesrv_config.htm#altfilename">altfilename</a> option in <font class="file">config.ini</font>. For example, create a script in the TFTP root directory <font class="file">C:\pxesrv\files\ubuntu.iscsi.txt </font> &gt; add <font class="file">altfilename=ubuntu.iscsi.txt</font> to <font class="file">config.ini</font>. <b>NOTE</b> - remember to change any references to <font class="file">${dhcp-server}</font> to <font class="file">${next-server}</font> if using ProxyDHCP.
</p>



<p>
Sample iPXE script <font class="file">ubuntu.iscsi.txt</font> - 
<br />
<textarea style="font-size:12px" cols="80" rows="3" align="left" readonly>
#!ipxe
set gateway 0.0.0.0
sanboot iscsi:${dhcp-server}::::iqn.target
boot
</textarea>
</p>







<a name="iscsiuri"></a>
<h3 class="breaktop"><u>iSCSI URI Syntax</u></h3>

<p>
The format for iSCSI URI's is - <font class="file">iscsi:[servername]:[protocol]:[port]:[LUN]:[targetname]</font>
</p>

<p>
Where -
<ul>
<li><font class="file">servername</font> - is the IP address or DNS name of the iSCSI <font class="file">Target</font>. In iPXE scripts, environment variables including <font class="file">${next-server}</font> or <font class="file">${dhcp-server}</font> can be used.</li>
</ul>
<ul>
<li><font class="file">protocol</font> - this field can be left blank. The protocol used for iSCSI is TCP.</li>
</ul>
<ul>
<li><font class="file">port</font> - is the port used for connections to the iSCSI <font class="file">Target</font>. The default port for iSCSI is 3260 - this field can be left blank if the default port is in use for incoming connections to the iSCSI <font class="file">Target</font> software. </li>
</ul>
<ul>
<li><font class="file">LUN</font> - leave blank and use default (0). The LUN format seems unnecessarily complex - see <a class="glossary" target="_blank" href="https://tools.ietf.org/html/rfc4173">here</a> and <a class="glossary" target="_blank" href="http://ipxe.org/sanuri">here</a>.</li>
</ul>
<ul>
<li><font class="file">targetname</font> - unique IQN of the <font class="file">Target</font> being booted/attached.</li>
</ul>



<p>
If default settings are used for the protocol, port and LUN fields then these fields can be left blank. The following entries for example will all function (assuming the <font class="file">Target</font> IP address is 192.168.1.1 and that this IP address is correctly set as the <font class="file">dhcp-server</font> variable when iPXE is booted) -
<ul>
<li><font class="file">iscsi:192.168.1.1:tcp:3260:0:iqn.target</font></li>
<li><font class="file">iscsi:${dhcp-server}:tcp:3260:0:iqn.target</font></li>
<li><font class="file">iscsi:192.168.1.1::::iqn.target</font></li>
<li><font class="file">iscsi:${dhcp-server}::::iqn.target</font></li>
</ul>
</p>








<p class="breaktop"><font class="file">Document date - 28<sup>th</sup> February 2017(DRAFT)</font></p></font></body></html>