<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"><html><head><link type="text/css" rel="stylesheet" href="style1.css" media="screen" /><title>Tiny PXE Server</title></head><body><font> 
 
 
 
<p> 
<select ONCHANGE="location = this.options[this.selectedIndex].value;"> 
<option value="" disabled></option> 
<option value="../index.html">Contents</option> 
<option value="" disabled>=======</option> 
<option value="pxesrv_about.htm">Introduction</option> 
<option value="pxesrv_settings.htm">Settings</option> 
<option value="pxesrv_gui.htm">GUI Settings</option> 
<option value="pxesrv_config.htm">Config.ini settings</option> 
<option value="pxesrv_service.htm">Run as Service</option> 
<option value="firewall.htm">Firewall Settings</option> 
<option value="test_system.htm">Test System(s)</option> 
<option value="misc.htm">Miscellaneous</option> 
<option value="troubleshooting.htm">Troubleshooting</option> 
<option value="" disabled></option> 
<option value="" disabled>Boot Loaders</option> 
<option value="" disabled>==========</option> 
<option value="pxelinux.htm">PXELINUX</option> 
<option value="grub4dos.htm" selected="selected">Grub4Dos</option> 
<option value="ipxe.htm">iPXE</option> 
<option value="" disabled></option> 
<option value="" disabled>Boot</option> 
<option value="" disabled>====</option> 
<option value="fdd.htm">Floppy Disk Image</option> 
<option value="iso.htm">ISO Image</option> 
<option value="" disabled></option> 
<option value="" disabled>Linux</option> 
<option value="" disabled>=====</option> 
<option value="centos_netinstall.htm">CentOS - Network...</option> 
<option value="debian_netinstall.htm">Debian - Network...</option> 
<option value="fatdog.htm">FatDog</option> 
<option value="gparted.htm">GPartEd</option> 
<option value="ubuntu.htm">ubuntu/Lubuntu</option> 
<option value="ubuntu_netinstall.htm">ubuntu - Network...</option> 
<option value="" disabled></option> 
<option value="" disabled>WinPE</option> 
<option value="" disabled>=====</option> 
<option value="winpe.htm">WinPE</option> 
<option value="winpe_wimboot.htm">WinPE (wimboot)</option> 
<option value="winpe_bcd.htm">Multiple WinPE</option> 
<option value="" disabled></option> 
<option value="" disabled>Net Install Windows</option> 
<option value="" disabled>===============</option> 
<option value="ris.htm">RIS</option> 
<option value="ris_issues.htm">Troubleshooting RIS</option> 
<option value="win6x.htm">Install Windows NT 6.*</option> 
<option value="win5x.htm">Install Windows NT 5.*</option> 
<option value="" disabled></option> 
<option value="" disabled>SANBOOT (AoE)</option> 
<option value="" disabled>================</option> 
<option value="aoe_target.htm">AoE (Windows T...</option> 
<option value="aoe_install_winnt5.htm">AoE (Install Driver...</option> 
<option value="aoe_install_winnt6.htm">AoE (Install Driver...</option> 
<option value="aoe.htm">AoE (Clone...</option> 
<option value="" disabled></option> 
<option value="" disabled>SANBOOT (iSCSI)</option> 
<option value="" disabled>================</option> 
<option value="iscsi_targets.htm">iSCSI (Windows T...</option> 
<option value="iscsi_kernsafe.htm">iSCSI (Kernsafe...</option> 
<option value="iscsi_ms.htm">iSCSI (Microsoft...</option> 
<option value="iscsi_pytarget.htm">iSCSI (pyTarget)</option> 
<option value="iscsi.htm">iSCSI (Clone...</option> 
<option value="iscsi_install.htm">iSCSI (Install...</option> 
<option value="iscsi_centos.htm">iSCSI ...CentOS</option> 
<option value="iscsi_ubuntu.htm">iSCSI ...ubuntu</option> 
<option value="iscsi_ubuntu_netinstall.htm">iSCSI ...ubuntu (2)</option> 
<option value="" disabled></option> 
<option value="" disabled>Miscellaneous</option> 
<option value="" disabled>===========</option> 
<option value="clone.htm">Capture Windows...</option> 
<option value="clone_strarc.htm">Copy Windows...</option> 
<option value="service.htm">Network Adapter C...</option> 
<option value="wfplwf.htm">Unbinding The Light...</option> 
<option value="forensics.htm">Digital Forensic Acq...</option> 
<option value="ipxe_build.htm">iPXE - How to...</option> 
<option value="" disabled></option> 
<option value="" disabled>Appendices</option> 
<option value="" disabled>=========</option> 
<option value="pxesrv_zip.htm">Contents of pxesrv.zip</option> 
<option value="pxesrv_faq.htm">Erwan's FAQ</option> 
<option value="ack.htm">Acknowledgements...</option> 
<option value="" disabled></option> 
</select> 
</p> 
 
 
 
<hr> 
<img src="img/logo6.jpg" BORDER=1></a> 
 



<h2 align="center"><u>Grub4dos</u></h2>




<p>
The following sections are covered in this page -
<ul>
<li><a class="glossary" href="grub4dos.htm#intro">Introduction</a></li>
<li><a class="glossary" href="grub4dos.htm#config_path">Configuration File Path</a></li>
<li><a class="glossary" href="grub4dos.htm#menu">Grub4dos Menu System</a></li>
<li><a class="glossary" href="grub4dos.htm#ipxe">Chainloading iPXE Scripts</a></li>
</ul>
</p>





<a name="intro"></a>
<h3 class="breaktop"><u>Introduction</u></h3>

<p>
<font class="file">grub4dos</font> version 0.4.5c 2013-04-19 is included in the <font class="file">Tiny PXE Server</font> Download. Two <font class="file">grub4dos</font> files were included in previous versions of the <font class="file">Tiny PXE Server</font> download, both standalone files without any file dependencies. <font class="file">Tiny PXE Server</font> version 1.0.0.20 (dated 12/2/2017 (19:29)) includes only <font class="file">grldr</font>. As it is possible that <font class="file">grub.exe</font> may be reintroduced, I have decided to include in in this guide. In the scope of this guide the two versions and their usage are as follows -

<ul>
<li><font class="file">grldr</font> - Network Bootstrap Program that can be chainloaded - e.g. via <font class="file">iPXE</font>. <font class="file">grldr</font> uses a menu - if a menu is not found then an embedded menu will be loaded. <font class="file">grldr</font> also has a command-line interface accessible from the menu by pressing the <b>C</b> key.</li>
</ul>

<ul>
<li><font class="file">grub.exe</font> - can be loaded by <font class="file">PXELINUX</font>, <font class="file">iPXE</font>, etc. <font class="file">grub.exe</font> also uses a menu system with a built in menu (if a menu is not found) and a command-line interface. Unlike <font class="file">grldr</font> it's possible to pass parameters directly to <font class="file">grub.exe</font>.</li>
</ul>
</p>


<p>
<font class="file">grub4dos</font> is a sophisticated boot manager with its own scripting language - due to the range of commands it supports I recommend that you refer to the following sites for more information - 
<ul>
<li><a target="_blank" href="http://diddy.boot-land.net/grub4dos/Grub4dos.htm">Grub4dos Guide</a> (<b>diddy</b>) - although it was written for an older version of Grub4dos (v 0.4.4) it covers basic usage relevant to newer versions.</li>
</ul>

<ul>
<li><a target="_blank" href="http://www.rmprepusb.com/tutorials/grub4dos">Grub4dos Guide</a> (<b>RMPrepUSB</b>) - up to date guide covering the <font class="file">grub4dos</font> version included in the <font class="file">Tiny PXE Server</font> download.</li>
</ul>
</p>




<p>
PXE related notes from the Grub4dos help file <font class="file">README_GRUB4DOS.txt</font> - 
<br />
<textarea style="font-size:12px;" cols="80" rows="20" align=left readonly>

******************************************************************************
***                          PXE device                                    ***
******************************************************************************

If PXE service is found at startup, GRUB4DOS will create a virtual device
(pd), through which files from the tftp server can be accessed. You can setup
a diskless boot environment using the following steps:

Client side

You need to boot from PXE ROM.

Server side

You need to configure a dhcp server and a tftp server. In the dhcp server, use
grldr as boot file.

You may also want to load a different menu.lst for different client. GRUB4DOS
will scan the following location for configuration file:

	[/mybootdir]/menu.lst/01-88-99-AA-BB-CC-DD
	[/mybootdir]/menu.lst/C000025B
	[/mybootdir]/menu.lst/C000025
	[/mybootdir]/menu.lst/C00002
	[/mybootdir]/menu.lst/C0000
	[/mybootdir]/menu.lst/C000
	[/mybootdir]/menu.lst/C00
	[/mybootdir]/menu.lst/C0
	[/mybootdir]/menu.lst/C
	[/mybootdir]/menu.lst/default

Here, we assume the network card mac for the client machine is
88:99:AA:BB:CC:DD, and the ip address is 192.0.2.91 (C000025B). /mybootdir is
the directory of the boot file, for example, if boot file is /tftp/grldr, then
mybootdir=tftp.

If none of the above files is present, grldr will use its embeded menu.lst.

This is a menu.lst to illstrate how to use files from the tftp server.

	title Create ramdisk using map
	map --mem (pd)/floppy.img (fd0)
	map --hook
	rootnoverify (fd0)
	chainloader (fd0)+1

	title Create ramdisk using memdisk
	kernel (pd)/memdisk
	initrd (pd)/floppy.img

You can see that the menu.lst is very similar to normal disk boot, you just
need to replace device like (hd0,0) with (pd).

There are some differences between disk device and pxe device:

1. You can't list files in the pxe device.

2. The blocklist command will not work with a file in the pxe device.

3. You must use --mem option if you want to map a file in the pxe device.

When you use chainloader to load file from the pxe device, there is a option
you can use:

	chainloader --raw (pd)/BOOT_FILE

Option --raw works just like --force, but it load file in one go. This can
improve performance in some situation.

You can use the pxe command to control the pxe device.

1. pxe

	If used without any parameter, pxe command will display current
	settings.

2. pxe blksize N

	Set the packet size for tftp transmission. Minimum value is 512,
	maximum value is 1432. This parameter is used primarily for very old
	tftp server where packet larger than 512 byte is not supported.

3. pxe basedir /dir

	Set the base directory for files in the tftp server. If

		pxe basedir /tftp

	then all files in the pxe device is related to directory /tftp, for
	example, (pd)/aa.img correspond to /tftp/aa.img in the server.

	The default value of base directory is the directory of the boot file,
	for example, if boot file is /tftp/grldr, then default base directory
	is /tftp.

4. pxe keep

	Keep the PXE stack. The default behaviour of GRUB4DOS is to unload
	the PXE stack just before it exits.

5. pxe unload

	Unload the PXE stack immediately.


******************************************************************************
***                       GRLDR as PXE boot file                           ***
******************************************************************************

GRLDR can be used as the PXE boot file on a remote/network server. The (pd)
device is used to access files on the server. When GRLDR is booted through
network, it will use its preset menu as the config file. However, you may use
a "pxe detect" command, which acts the same way as PXELINUX:

    * First, it will search for the config file using the hardware type (using
      its ARP type code) and address, all in hexadecimal with dash separators;
      for example, for an Ethernet (ARP type 1) with address 88:99:AA:BB:CC:DD
      it would search for the filename 01-88-99-AA-BB-CC-DD. 

    * Next, it will search for the config file using its own IP address in
      upper case hexadecimal, e.g. 192.0.2.91 -> C000025B. If that file is not
      found, it will remove one hex digit and try again. At last, it will try
      looking for a file named default (in lower case). As an example, if the
      boot file name is /mybootdir/grldr, the Ethernet MAC address is
      88:99:AA:BB:CC:DD and the IP address 192.0.2.91, it will try following
      files (in that order): 

       /mybootdir/menu.lst/01-88-99-AA-BB-CC-DD
       /mybootdir/menu.lst/C000025B
       /mybootdir/menu.lst/C000025
       /mybootdir/menu.lst/C00002
       /mybootdir/menu.lst/C0000
       /mybootdir/menu.lst/C000
       /mybootdir/menu.lst/C00
       /mybootdir/menu.lst/C0
       /mybootdir/menu.lst/C
       /mybootdir/menu.lst/default

You cannot directly map an image file on (pd). You must map it in memory using
the --mem option. For example,

	map --mem (pd)/images/floppy.img (fd0)
	map --hook
	chainloader (fd0)+1
	rootnoverify (fd0)
	boot

One more example,

	map --mem (pd)/images/cdimage.iso (0xff)
	map --hook
	chainloader (0xff)
	boot




******************************************************************************
***                    Use 'pxe detect' in preset-menu                     ***
******************************************************************************

Now the "pxe" command has a new subcommand "detect":

		pxe detect [BLOCK_SIZE] [MENU_FILE]

BLOCK_SIZE specifies the block size for PXE. If it is not specified or it is
0, then grub4dos will go through a probing process and get a proper value
for data transfer.

MENU_FILE specifies the config file on the PXE server. If omitted, a standard
config file in the menu.lst sub-dir will gain control. For a description on
the config files in the menu.lst sub-dir, please refer to the section
"GRLDR as PXE boot file" above.
If MENU_FILE starts in a "/", then the MENU_FILE on the PXE server will gain
control, else(if MENU_FILE does not start in a "/") no menu will be executed.

Normally you want to use a "pxe blksize ..." or a "pxe detect ..." command
before you access the (pd) device, since the default blocksize of 512 might
not work on your system.

</textarea>
</p>















<a name="config_path"></a>
<h3 class="breaktop"><u>Configuration File Path</u></h3>

<p>
The default path for the <font class="file">Grub4dos</font> configuration file is the \menu.lst\ directory - the path is relative to the <font class="file">Grub4dos</font> Network Bootstrap Program - <font class="file">grldr</font> (or <font class="file">grub.exe</font>). It's possible to use separate configuration files for each client PC by using a filename based upon information unique to each client. Configuration file names are parsed in the following order - 

<ul>
<li>MAC Address - lowercase hexadecimal with - separators. The MAC address needs to be preceded with it's ARP type. E.g. for MAC address 08 00 27 7A 13 19 on a card with ARP type 1, use filename 01-08-00-27-7a-13-19.</li>
</ul>


<ul>
<li>Clients IP (v4) address in a hexadecimal format. E.g. IP address 192.168.2.3 resolves to C0A80203 - therefore use filename C0A80203. </li>
</ul>


<ul>
<li>Clients IP (v4) address in a hexadecimal format minus last digit from previous attempt. E.g. if C0A80203 was just attempted, try C0A8020, then try C0A802, etc. </li>
</ul>


<ul>
<li>default</li>
</ul>
</p>




<p>
On a test system with the following setup... 
<ul>
<li>MAC = 01-08-00-27-7a-13-19</li>
<li>IP Address = C0A80202</li>
</ul>
...the attempted load order will be as follows - 

<ul>
<li>\menu.lst\01-08-00-27-7a-13-19</li>
<li>\menu.lst\C0A80202</li>
<li>\menu.lst\C0A8020</li>
<li>\menu.lst\C0A802</li>
<li>\menu.lst\C0A80</li>
<li>\menu.lst\C0A8</li>
<li>\menu.lst\C0A</li>
<li>\menu.lst\C0</li>
<li>\menu.lst\C</li>
<li>\menu.lst\default</li>
</ul>
</p>














<a name="menu"></a>
<h3 class="breaktop"><u>Grub4dos Menu System</u></h3>


<p>
The default <font class="file">Grub4dos</font> menu (i.e. the embedded menu loaded if a menu file cannot be located) is text based. <font class="file">Grub4dos</font> also has built in graphic support for splash images. The syntax for graphic support is covered in detail <a target=_blank" href="http://www.rmprepusb.com/tutorials/grub4dos#TOC-High-colour-and-High-Resolution-backgrounds">here</a>. 
</p>


<p>
The <font class="file">splashimage</font> command can be used without defining a <font class="file">graphicsmode</font> providing that a supported image type is specified and the image is of a resolution supported by the client systems VESA BIOS Extensions (VBE) mode. 
<div id="quote">
"<a class="glossary" href="http://www.rmprepusb.com/tutorials/grub4dos#TOC-High-colour-and-High-Resolution-backgrounds">...0.4.5c and later versions of grub4dos support bmp files and compressed .bmp.gz files in 640x480, 800x600 and 1024x768, 8, 16, 24 or 32 bit colour!...</a>
</div>
</p>
 



<p>
The PXELINUX menu entries in this guide have been kept as simple as possible. The majority of options here use the format -

<br /><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp<b>title PXELINUX</b><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp<b>pxe keep</b><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp<b>chainloader --raw (pd)/pxelinux.0</b><br />
</p>



<p>
and -
<br /><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp<b>title Win98 DOS Boot Disk</b><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp<b>map --mem (pd)/images/win98.ima (fd0)</b><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp<b>map --hook</b><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp<b>root (fd0)</b><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp<b>chainloader +1</b><br />
</p>



<p>
and -
<br /><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp<b>title Win98 DOS Boot Disk (Memdisk)</b><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp<b>kernel (pd)/memdisk</b><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp<b>initrd (pd)/images/win98.ima</b><br />
</p>


<p>
It's also possible to load submenus - 

<br /><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp<b>title Floppy Disk Image Submenu</b><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp<b>configfile /menu.lst/submenu1.txt</b><br />
</p>
 






<p>
Putting all this together - 
<br />
<textarea cols="45" rows="18" align=left readonly>
title PXELINUX
pxe keep
chainloader --raw (pd)/pxelinux.0

title Win98 DOS Boot Disk
map --mem (pd)/images/win98.ima (fd0)
map --hook
root (fd0)
chainloader +1

title Win98 DOS Boot Disk (Memdisk)
kernel (pd)/memdisk
initrd (pd)/images/win98.ima

title Floppy Disk Image Submenu
configfile /menu.lst/submenu1.txt
</textarea>
</p>


<p>
Screenshot of the above menu as displayed on the client system - 
<br />
<IMG SRC="img/grub4dos_menu1.jpg" BORDER=2>
</p>


<p>
Now let's take a closer look at the menu entry syntax - 
<ul>
<li><b>title</b> - this acts as a placemark and also contains the text that will be displayed for the menu entry.
</ul>


<ul>
<li><b>map --mem</b> - the <font class="file">README_GRUB4DOS.txt</font> file states that <i>"...You must use --mem option if you want to map a file in the pxe device..."</i>. Mapping a file to memory creates a RAMDisk. </li> 
</ul>


<ul>
<li><b>kernel</b> - <i>"...Attempt to load the primary boot image from FILE. The rest of the line is passed verbatim as the "kernel command line". Any modules must be reloaded after using this command..."</i> In the scope of this guide the file specified here (including path) is usually a linux kernel type file. Unlike <font class="file">PXELINUX</font> menu entries, parameters are specified in the kernel entry - these parameters are usually listed in the APPEND entry in <font class="file">PXELINUX</font>. Quick reminder about the file path - assuming the file is loaded from the server then the path must specify the (pd) device + path relative to the tftp root directory (see examples above).
</li> 
</ul>

<ul>
<li><b>initrd</b> - linux initial ramdisk file with path. </li> 
</ul>


<ul>
<li><b>pxe</b> - options are <i>pxe keep</i> ("...Keep the PXE stack. The default behaviour of GRUB4DOS is to unload...") and <i>pxe unload</i> ("...Unload the PXE stack immediately..."). <i>pxe keep</i> is required if chainloading another Network Bootstrap Program (e.g. <font class="file">pxelinux.0</font>).
</li> 
</ul>
</p>












<a name="ipxe"></a>
<h3 class="breaktop"><u>Chainloading iPXE Scripts</u></h3>


<p>
<font class="file">iPXE</font> supports HTTP and SANBOOT - consequently there are times when it might be useful to chainload <font class="file">ipxe.lkrn</font> from <font class="file">grub4dos</font>. The following menu entry shows the syntax for loading <font class="file">ipxe.lkrn</font> (kernel) with a script (initrd) -
<br />
<textarea style="font-size:12px" cols="80" rows="6" align="left" readonly>

title iPXE loading menu.ipxe
pxe keep
kernel (pd)/ipxe.lkrn
initrd (pd)/menu.ipxe
</textarea>
</p>

<p>
If chainloading <font class="file">ipxe.lkrn</font> the iPXE scripts used in this guide may need to be edited to add commands for configuring the Client PCs network interface. This is not required when using iPXE as the network bootstrap program with a script set as <a class="glossary" href="pxesrv_config.htm#altfilename">altfilename</a> in <font class="file">config.ini</font> as the network interface is automatically configured. To configure the first network adapter, simply add the following code at the start of any scripts to run the <font class="file">dhcp</font> command -
<br />
<textarea style="font-size:12px" cols="80" rows="4" align="left" readonly>

#!ipxe
dhcp net0 && echo IP address: ${net0/ip} ; echo Subnet mask: ${net0/netmask}
</textarea>
</p>

<p>
E.g. -
<br >
<textarea style="font-size:12px" cols="80" rows="5" align="left" readonly>

#!ipxe
dhcp net0 && echo IP address: ${net0/ip} ; echo Subnet mask: ${net0/netmask}
chain ${boot-url}/pxeboot.0
</textarea>
</p>






<p class="breakbottom">
</p>




<p class="breaktop"><font class="file">Document date - 28<sup>th</sup> February 2017(DRAFT)</font></p></font></body></html>